{"version":3,"sources":["gateway/gateway.js","redux/recipe.actions.js","components/NewRecipe.js","components/Header.js","components/Main.js","components/EditRecipe.js","components/Recipe.js","redux/recipe.selectors.js","App.js","redux/recipe.reducer.js","store.js","index.js"],"names":["baseUrl","getRecipeList","dispatch","fetch","then","res","json","Error","recipesList","recipeList","type","payload","recipeListRecieved","createRecipe","title","description","image","recipeData","method","headers","body","JSON","stringify","recipesGateway","createAt","Date","toISOString","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","position","zIndex","backgroundColor","form","width","padding","submit","margin","icon","right","wrap","input","mapDispatch","crateRecipe","connect","closeModal","onCreate","useState","setImage","setTitle","setDescription","classes","Container","component","CssBaseline","className","onClick","TextField","variant","required","fullWidth","id","label","name","autoFocus","onChange","event","target","value","handleChange","setValue","handleImage","Button","color","marginRight","Header","modal","setModal","AppBar","Toolbar","Typography","noWrap","heroContent","palette","background","heroButtons","Main","align","gutterBottom","paragraph","editor","top","textfield","EditRecipe","onEdit","cardGrid","paddingTop","paddingBottom","card","height","cardMedia","cardContent","flexGrow","Recipe","recipe","onDelete","openModal","recipeId","setId","Grid","container","map","item","key","xs","sm","md","Card","CardMedia","CardContent","CardActions","size","dataId","recipeListSelector","state","actions","updateRecipe","editRecipe","deleteRecipe","useEffect","initialState","reducer","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59fc79c2.chunk.js","sourcesContent":["const baseUrl = `https://5eca820038df9600165117b6.mockapi.io/mock`;\n\nexport const createRecipe = (recipeData) => {\n  try {\n    return fetch(baseUrl, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json; charset=utf-8\",\n      },\n      body: JSON.stringify(recipeData),\n    });\n  } catch {\n    throw new Error(\"Faild to create recipe\");\n  }\n};\n\nexport const fetchRecipeList = () => {\n  return fetch(baseUrl)\n    .then((res) => {\n      try {\n        return res.json();\n      } catch {\n        throw new Error(\"Faild to get recipes\");\n      }\n    })\n    .then((recipesList) => recipesList);\n};\n\nexport const updateRecipe = (recipeId, recipeData) => {\n  try {\n    return fetch(`${baseUrl}/${recipeId}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json;charset=utf-8\",\n      },\n      body: JSON.stringify(recipeData),\n    });\n  } catch {\n    throw new Error(\"Faild to create recipe\");\n  }\n};\n\nexport const deleteRecipe = (id) => {\n  try {\n    return fetch(`${baseUrl}/${id}`, {\n      method: \"DELETE\",\n    });\n  } catch {\n    throw new Error(\"Faild to create recipe\");\n  }\n};\n\n","import * as recipesGateway from \"../gateway/gateway\";\n\nexport const RECIPE_LIST_RECIEVED = \"RECIPE_LIST_RECIEVED\";\n\nexport const recipeListRecieved = (recipeList) => {\n  return {\n    type: RECIPE_LIST_RECIEVED,\n    payload: {\n      recipeList,\n    },\n  };\n};\n\nexport const getRecipeList = () => {\n  return function (dispatch) {\n    recipesGateway\n      .fetchRecipeList()\n      .then((recipeList) => dispatch(recipeListRecieved(recipeList)));\n  };\n};\n\nexport const updateRecipe = (recipeId, editRecipe) => {\n  return function (dispatch) {\n    recipesGateway\n      .updateRecipe(recipeId, editRecipe)\n      .then(() => dispatch(getRecipeList()));\n  };\n};\n\nexport const deleteRecipe = (recipeId) => {\n  return function (dispatch) {\n    recipesGateway.deleteRecipe(recipeId).then(() => dispatch(getRecipeList()));\n  };\n};\n\nexport const createRecipe = (title, description, image) => {\n  return function (dispatch) {\n    const newrecipe = {\n      title,\n      description,\n      image,\n      createAt: new Date().toISOString(),\n    };\n    recipesGateway\n      .createRecipe(newrecipe)\n      .then(() => dispatch(getRecipeList()));\n  };\n};\n","import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createRecipe } from \"../redux/recipe.actions\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    position: \"fixed\",\n    zIndex: 1000,\n    backgroundColor: \"#fafafa\",\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1),\n    padding: \"15px\",\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  icon: {\n    position: \"absolute\",\n    right: 0,\n  },\n  wrap: {\n    margin: theme.spacing(1),\n  },\n\n  input: {\n    display: \"none\",\n  },\n}));\n\nconst NewRecipe = ({ closeModal, onCreate }) => {\n  const [image, setImage] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const handleImage = (event) => {\n    setImage(event.target.value);\n  };\n  const handleChange = (event) => {\n    setTitle(event.target.value);\n  };\n  const setValue = (event) => {\n    setDescription(event.target.value);\n  };\n  const onSubmit = () => {\n    onCreate(title, description, image);\n    closeModal();\n  };\n\n  const classes = useStyles();\n\n  return (\n    <Container component=\"div\">\n      <CssBaseline />\n\n      <div className={classes.paper}>\n        <CloseIcon className={classes.icon} onClick={closeModal} />\n\n        <form className={classes.form}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"title\"\n            label=\"Title\"\n            name=\"title\"\n            autoFocus\n            onChange={(event) => handleChange(event)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"description\"\n            label=\"Description\"\n            type=\"description\"\n            id=\"description\"\n            onChange={(event) => setValue(event)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"images\"\n            label=\"image url\"\n            type=\"images\"\n            id=\"images\"\n            onChange={(event) => handleImage(event)}\n          />\n          <Button\n            type=\"button\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={onSubmit}\n          >\n            Add Recipe\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n};\n\nconst mapDispatch = {\n  crateRecipe: createRecipe,\n};\n\nNewRecipe.propTypes = {\n  closeModal: PropTypes.func.isRequired,\n  createRecipe: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatch)(NewRecipe);\n","import React, { useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { AppBar, Toolbar } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport NewRecipe from \"./NewRecipe\";\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nconst Header = ({ onCreate }) => {\n  const [modal, setModal] = useState(false);\n\n  const classes = useStyles();\n  const closeModal = () => {\n    setModal(false);\n  };\n  return (\n    <>\n      <AppBar position=\"relative\">\n        <Toolbar>\n          <AddIcon className={classes.icon} onClick={() => setModal(true)} />\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            Add new recipe\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      {modal && <NewRecipe closeModal={closeModal} onCreate={onCreate} />}\n    </>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport Container from \"@material-ui/core/Typography\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n}));\n\nconst Main = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.heroContent}>\n      <Container>\n        <Typography\n          component=\"h1\"\n          variant=\"h1\"\n          align=\"center\"\n          color=\"textPrimary\"\n          gutterBottom\n        >\n          Cookbook JavaScript application.\n        </Typography>\n        <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n          You can add recipe, edit, and delete\n        </Typography>\n      </Container>\n    </div>\n  );\n};\n\nexport default Main;\n","import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst useStyles = makeStyles((theme) => ({\n  editor: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    position: \"fixed\",\n    zIndex: 1000,\n    backgroundColor: \"#fafafa\",\n    top: 100,\n  },\n  textfield: {\n    width: \"100%\",\n    marginTop: theme.spacing(1),\n    padding: \"15px\",\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  icon: {\n    position: \"absolute\",\n    right: 0,\n  },\n  wrap: {\n    margin: theme.spacing(1),\n  },\n\n  input: {\n    display: \"none\",\n  },\n}));\nconst EditRecipe = ({ closeModal, onEdit, id }) => {\n  const [image, setImage] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const handleImage = (event) => {\n    setImage(event.target.value);\n  };\n  const handleChange = (event) => {\n    setTitle(event.target.value);\n  };\n  const setValue = (event) => {\n    setDescription(event.target.value);\n  };\n  const onSubmit = () => {\n    const edit = {\n      image,\n      title,\n      description,\n    };\n    onEdit(id, edit);\n    closeModal();\n  };\n\n  const classes = useStyles();\n  return (\n    <div className={classes.editor}>\n      <CloseIcon className={classes.icon} onClick={closeModal} />\n\n      <form className={classes.textfield}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"title\"\n          label=\"Title\"\n          name=\"title\"\n          autoFocus\n          onChange={(event) => handleChange(event)}\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"description\"\n          label=\"Description\"\n          type=\"description\"\n          id=\"description\"\n          onChange={(event) => setValue(event)}\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"images\"\n          label=\"image url\"\n          type=\"images\"\n          id=\"images\"\n          onChange={(event) => handleImage(event)}\n        />\n        <Button\n          type=\"button\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={onSubmit}\n        >\n          Edit Recipe\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default EditRecipe;\n","import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport EditRecipe from \"./EditRecipe\";\n\nconst useStyles = makeStyles((theme) => ({\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\",\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n}));\n\nconst Recipe = ({ recipe, onEdit, onDelete }) => {\n  const [openModal, setModal] = useState(false);\n  const [recipeId, setId] = useState();\n\n  const closeModal = () => {\n    setModal(false);\n  };\n  const handleClick = (dataId) => {\n    setModal(true);\n    setId(dataId);\n  };\n  const classes = useStyles();\n  if (!recipe) {\n    return (\n      <Grid container spacing={4}>\n        Recipes not found\n      </Grid>\n    );\n  }\n  return (\n    <>\n      <Container className={classes.cardGrid}>\n        {openModal && (\n          <EditRecipe closeModal={closeModal} onEdit={onEdit} id={recipeId} />\n        )}\n        <Grid container spacing={4}>\n          {recipe.map((card) => (\n            <Grid item key={card.id} xs={12} sm={6} md={4}>\n              <Card className={classes.card}>\n                <CardMedia\n                  className={classes.cardMedia}\n                  image={card.image}\n                  title=\"Image title\"\n                />\n                <CardContent className={classes.cardContent}>\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    {card.title}\n                  </Typography>\n                  <Typography>{card.description}</Typography>\n                </CardContent>\n                <CardActions>\n                  <Button\n                    size=\"small\"\n                    color=\"primary\"\n                    onClick={() => onDelete(card.id)}\n                  >\n                    Delete\n                  </Button>\n                  <Button\n                    size=\"small\"\n                    color=\"primary\"\n                    onClick={() => handleClick(card.id)}\n                  >\n                    Edit\n                  </Button>\n                </CardActions>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n    </>\n  );\n};\nexport default Recipe;\n","export const recipeListSelector = (state) => {\n  return state.recipe.recipeList;\n};\n","import React, { useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport Recipe from \"./components/Recipe\";\nimport { recipeListSelector } from \"./redux/recipe.selectors\";\nimport * as actions from \"./redux/recipe.actions\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst App = ({\n  recipe,\n  createRecipe,\n  updateRecipe,\n  deleteRecipe,\n  getRecipeList,\n}) => {\n  useEffect(() => {\n    getRecipeList();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Header onCreate={createRecipe} />\n      <main>\n        <Main />\n        <Recipe recipe={recipe} onEdit={updateRecipe} onDelete={deleteRecipe} />\n      </main>\n    </div>\n  );\n};\n\nApp.propTypes = {\n  getRecipeList: PropTypes.func.isRequired,\n  recipe: PropTypes.array,\n  createRecipe: PropTypes.func,\n  deleteRecipe: PropTypes.func,\n  updateRecipe: PropTypes.func,\n};\nconst mapDispatch = {\n  getRecipeList: actions.getRecipeList,\n  updateRecipe: actions.updateRecipe,\n  deleteRecipe: actions.deleteRecipe,\n  createRecipe: actions.createRecipe,\n};\nconst mapState = (state) => {\n  return {\n    recipe: recipeListSelector(state),\n  };\n};\nexport default connect(mapState, mapDispatch)(App);\n","import { RECIPE_LIST_RECIEVED } from \"./recipe.actions\";\n\nconst initialState = {\n  recipeList: [],\n};\n\nexport const recipeReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case RECIPE_LIST_RECIEVED: {\n      return {\n        ...state,\n        recipeList: action.payload.recipeList,\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { recipeReducer } from \"./redux/recipe.reducer\";\n\nconst reducer = combineReducers({\n  recipe: recipeReducer,\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
{"version":3,"sources":["gateway/gateway.js","redux/recipe.actions.js","components/NewRecipe.js","components/Header.js","redux/recipe.selectors.js","components/Recipe.js","components/EditRecipe.js","components/SingleRecipe.js","routes.js","App.js","redux/recipe.reducer.js","store.js","index.js"],"names":["baseUrl","updateRecipe","recipeId","recipeData","fetch","method","headers","body","JSON","stringify","Error","getRecipeList","dispatch","then","res","json","recipesList","recipeList","type","payload","recipeListRecieved","createRecipe","title","description","image","recipesGateway","createAt","Date","toISOString","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","position","zIndex","backgroundColor","marginLeft","form","width","padding","submit","margin","icon","right","wrap","input","mapDispatch","crateRecipe","connect","closeModal","onCreate","useState","setImage","setTitle","setDescription","classes","Container","component","CssBaseline","className","onClick","TextField","variant","required","fullWidth","id","label","name","autoFocus","onChange","event","target","value","handleChange","setValue","handleImage","Button","color","marginRight","Header","modal","setModal","AppBar","Toolbar","Typography","noWrap","recipeListSelector","state","recipe","getSingleRecipeSelector","currentRecipe","recipeHistorySelector","cardGrid","paddingTop","paddingBottom","card","height","cardMedia","cardContent","flexGrow","actions","useEffect","Grid","container","map","item","key","xs","sm","md","Card","CardMedia","CardContent","gutterBottom","CardActions","to","size","editor","top","textfield","EditRecipe","onEdit","editHistory","edit","flex","content","getReicepeListById","curentRecipe","singleRecipeRecived","editRecipe","deleteRecipe","updateHistoryRecipe","getState","updatedRecipe","historyVersion","history","openModal","useParams","routerHistory","useHistory","ArrowBack","maxWidth","push","onDelete","routes","path","exact","route","toString","initialState","reducer","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c26133e9.chunk.js","sourcesContent":["const baseUrl = `https://5eca820038df9600165117b6.mockapi.io/mock`;\n\nexport const createRecipe = (recipeData) => {\n  try {\n    return fetch(baseUrl, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json; charset=utf-8\",\n      },\n      body: JSON.stringify(recipeData),\n    });\n  } catch {\n    throw new Error(\"Faild to create recipe\");\n  }\n};\n\nexport const fetchRecipeList = () => {\n  return fetch(baseUrl)\n    .then((res) => {\n      try {\n        return res.json();\n      } catch {\n        throw new Error(\"Faild to get recipes\");\n      }\n    })\n    .then((recipesList) => recipesList);\n};\n\nexport const updateRecipe = (recipeId, recipeData) => {\n  try {\n    return fetch(`${baseUrl}/${recipeId}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json;charset=utf-8\",\n      },\n      body: JSON.stringify(recipeData),\n    });\n  } catch {\n    throw new Error(\"Faild to create recipe\");\n  }\n};\n\nexport const deleteRecipe = (id) => {\n  try {\n    return fetch(`${baseUrl}/${id}`, {\n      method: \"DELETE\",\n    });\n  } catch {\n    throw new Error(\"Faild to create recipe\");\n  }\n};\n\nexport const fetchRecipeListById = (id) => {\n  return fetch(`${baseUrl}/${id}`)\n    .then((res) => {\n      try {\n        return res.json();\n      } catch {\n        throw new Error(\"Faild to get recipes\");\n      }\n    })\n    .then((curentRecipe) => curentRecipe);\n};\n","import * as recipesGateway from \"../gateway/gateway\";\n\nexport const RECIPE_LIST_RECIEVED = \"RECIPE_LIST_RECIEVED\";\nexport const SINGLE_RECIPE_RECIVED = \"SINGLE_RECIPE_RECIVED\";\n\nexport const recipeListRecieved = (recipeList) => {\n  return {\n    type: RECIPE_LIST_RECIEVED,\n    payload: {\n      recipeList,\n    },\n  };\n};\nexport const singleRecipeRecived = (curentRecipe) => {\n  return {\n    type: SINGLE_RECIPE_RECIVED,\n    payload: {\n      curentRecipe,\n    },\n  };\n};\n\nexport const getRecipeList = () => {\n  return function (dispatch) {\n    recipesGateway\n      .fetchRecipeList()\n      .then((recipeList) => dispatch(recipeListRecieved(recipeList)));\n  };\n};\nexport const getReicepeListById = (id) => {\n  return function (dispatch) {\n    recipesGateway\n      .fetchRecipeListById(id)\n      .then((curentRecipe) => dispatch(singleRecipeRecived(curentRecipe)));\n  };\n};\n\nexport const updateRecipe = (recipeId, editRecipe) => {\n  return function (dispatch) {\n    recipesGateway\n      .updateRecipe(recipeId, editRecipe)\n      .then(() => dispatch(getRecipeList()));\n  };\n};\n\nexport const deleteRecipe = (recipeId) => {\n  return function (dispatch) {\n    recipesGateway.deleteRecipe(recipeId).then(() => dispatch(getRecipeList()));\n  };\n};\n\nexport const createRecipe = (title, description, image) => {\n  return function (dispatch) {\n    const newrecipe = {\n      title,\n      description,\n      image,\n      createAt: new Date().toISOString(),\n    };\n    recipesGateway\n      .createRecipe(newrecipe)\n      .then(() => dispatch(getRecipeList()));\n  };\n};\n\nexport const editHistory = (recipeId) => {\n  return function (dispatch, getState) {\n    const history = getState();\n    const historyVersion = history.recipe.currentRecipe;\n    const updatedRecipe = {\n      historyVersion,\n      createAt: new Date().toISOString(),\n    };\n\n    recipesGateway\n      .updateRecipe(recipeId, updatedRecipe)\n      .then(() => dispatch(getRecipeList()));\n  };\n};\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  CssBaseline,\n  TextField,\n  Container,\n  makeStyles,\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createRecipe } from \"../redux/recipe.actions\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    position: \"fixed\",\n    zIndex: 1000,\n    backgroundColor: \"#fafafa\",\n    marginLeft: 100,\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1),\n    padding: 15,\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  icon: {\n    position: \"absolute\",\n    right: 0,\n  },\n  wrap: {\n    margin: theme.spacing(1),\n  },\n\n  input: {\n    display: \"none\",\n  },\n}));\n\nconst NewRecipe = ({ closeModal, onCreate }) => {\n  const [image, setImage] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const handleImage = (event) => {\n    setImage(event.target.value);\n  };\n  const handleChange = (event) => {\n    setTitle(event.target.value);\n  };\n  const setValue = (event) => {\n    setDescription(event.target.value);\n  };\n  const onSubmit = () => {\n    onCreate(title, description, image);\n    closeModal();\n  };\n\n  const classes = useStyles();\n\n  return (\n    <Container component=\"div\">\n      <CssBaseline />\n    \n      <div className={classes.paper}>\n        <CloseIcon className={classes.icon} onClick={closeModal} />\n\n        <form className={classes.form}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"title\"\n            label=\"Title\"\n            name=\"title\"\n            autoFocus\n            onChange={(event) => handleChange(event)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"description\"\n            label=\"Description\"\n            type=\"description\"\n            id=\"description\"\n            onChange={(event) => setValue(event)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"images\"\n            label=\"image url\"\n            type=\"images\"\n            id=\"images\"\n            onChange={(event) => handleImage(event)}\n          />\n          <Button\n            type=\"button\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={onSubmit}\n          >\n            Add Recipe\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n};\n\nconst mapDispatch = {\n  crateRecipe: createRecipe,\n};\n\nNewRecipe.propTypes = {\n  closeModal: PropTypes.func.isRequired,\n  createRecipe: PropTypes.func,\n};\n\nexport default connect(null, mapDispatch)(NewRecipe);\n","import React, { useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { AppBar, Toolbar } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport NewRecipe from \"./NewRecipe\";\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nconst Header = ({ onCreate }) => {\n  const [modal, setModal] = useState(false);\n\n  const classes = useStyles();\n  const closeModal = () => {\n    setModal(false);\n  };\n  return (\n    <>\n      <AppBar position=\"relative\">\n        <Toolbar>\n          <AddIcon className={classes.icon} onClick={() => setModal(true)} />\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            Add new recipe\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      {modal && <NewRecipe closeModal={closeModal} onCreate={onCreate} />}\n    </>\n  );\n};\n\nexport default Header;\n","export const recipeListSelector = (state) => state.recipe.recipeList;\nexport const getSingleRecipeSelector = (state) => state.recipe.currentRecipe;\nexport const recipeHistorySelector = (state) => state.recipe.currentRecipe;\n","import React, { useEffect } from \"react\";\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Grid,\n  Typography,\n  Container,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { recipeListSelector } from \"../redux/recipe.selectors\";\nimport * as actions from \"../redux/recipe.actions\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\",\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n}));\n\nconst Recipe = ({ recipe, getRecipeList }) => {\n  useEffect(() => {\n    getRecipeList();\n  }, []);\n\n  const classes = useStyles();\n  if (!recipe) {\n    return (\n      <Grid container spacing={4}>\n        Recipes not found\n      </Grid>\n    );\n  }\n  return (\n    <>\n      <Container className={classes.cardGrid}>\n        <Grid container spacing={4}>\n          {recipe.map((card) => (\n            <Grid item key={card.id} xs={12} sm={6} md={4}>\n              <Card className={classes.card}>\n                <CardMedia\n                  className={classes.cardMedia}\n                  image={card.image}\n                  title=\"Image title\"\n                />\n                <CardContent className={classes.cardContent}>\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    {card.title}\n                  </Typography>\n                  <Typography>{card.description}</Typography>\n                </CardContent>\n                <CardActions>\n                  <Link to={`/${card.id}`}>\n                    <Button size=\"small\" color=\"primary\">\n                      View\n                    </Button>\n                  </Link>\n                </CardActions>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n    </>\n  );\n};\n\nRecipe.propTypes = {\n  recipe: PropTypes.array,\n  deleteRecipe: PropTypes.func,\n  updateRecipe: PropTypes.func,\n};\n\nconst mapDispatch = {\n  getRecipeList: actions.getRecipeList,\n};\nconst mapState = (state) => {\n  return {\n    recipe: recipeListSelector(state),\n  };\n};\nexport default connect(mapState, mapDispatch)(Recipe);\n","import React, { useState } from \"react\";\nimport { Button, TextField, makeStyles } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst useStyles = makeStyles((theme) => ({\n  editor: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    position: \"fixed\",\n    zIndex: 1000,\n    backgroundColor: \"#fafafa\",\n    top: 100,\n  },\n  textfield: {\n    width: \"100%\",\n    marginTop: theme.spacing(1),\n    padding: \"15px\",\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  icon: {\n    position: \"absolute\",\n    right: 0,\n  },\n  wrap: {\n    margin: theme.spacing(1),\n  },\n\n  input: {\n    display: \"none\",\n  },\n}));\nconst EditRecipe = ({ closeModal, onEdit, id, editHistory }) => {\n  const [image, setImage] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const handleImage = (event) => {\n    setImage(event.target.value);\n  };\n  const handleChange = (event) => {\n    setTitle(event.target.value);\n  };\n  const setValue = (event) => {\n    setDescription(event.target.value);\n  };\n  const onSubmit = () => {\n    const edit = {\n      image,\n      title,\n      description,\n    };\n    onEdit(id, edit);\n    editHistory(id, edit);\n    closeModal();\n  };\n\n  const classes = useStyles();\n  return (\n    <div className={classes.editor}>\n      <CloseIcon className={classes.icon} onClick={closeModal} />\n\n      <form className={classes.textfield}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"title\"\n          label=\"Title\"\n          name=\"title\"\n          autoFocus\n          onChange={(event) => handleChange(event)}\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"description\"\n          label=\"Description\"\n          type=\"description\"\n          id=\"description\"\n          onChange={(event) => setValue(event)}\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"images\"\n          label=\"image url\"\n          type=\"images\"\n          id=\"images\"\n          onChange={(event) => handleImage(event)}\n        />\n        <Button\n          type=\"button\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={onSubmit}\n        >\n          Edit Recipe\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default EditRecipe;\n","import React, { useState, useEffect } from \"react\";\nimport { ArrowBack } from \"@material-ui/icons\";\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Typography,\n  Container,\n} from \"@material-ui/core\";\nimport {\n  getSingleRecipeSelector,\n  recipeHistorySelector,\n} from \"../redux/recipe.selectors\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport * as actions from \"../redux/recipe.actions\";\nimport { connect } from \"react-redux\";\nimport EditRecipe from \"./EditRecipe\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\",\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  flex: {\n    display: \"flex\",\n  },\n  content: {\n    display: \"contents\",\n  },\n}));\n\nconst SingleRecipe = ({\n  getReicepeListById,\n  currentRecipe,\n  updateRecipe,\n  deleteRecipe,\n  history,\n  updateHistoryRecipe,\n}) => {\n  const [openModal, setModal] = useState(false);\n  const { id } = useParams();\n  let routerHistory = useHistory();\n\n  useEffect(() => {\n    getReicepeListById(id);\n  }, [history, currentRecipe]);\n\n  const closeModal = () => {\n    setModal(false);\n  };\n\n  const onDelete = (id) => {\n    deleteRecipe(id);\n    routerHistory.push(\"/\");\n  };\n  const classes = useStyles();\n  if (!currentRecipe) {\n    return <div>Recipes not found</div>;\n  }\n  return (\n    <div className={classes.flex}>\n      <Link to=\"/\">\n        <ArrowBack>Go Back</ArrowBack>\n      </Link>\n      <div className={classes.content}>\n        <Container maxWidth=\"sm\">\n          {openModal && (\n            <EditRecipe\n              closeModal={closeModal}\n              onEdit={updateRecipe}\n              editHistory={updateHistoryRecipe}\n              id={id}\n            />\n          )}\n          <h3>Recipe</h3>\n          <Card className={classes.card}>\n            <CardMedia\n              className={classes.cardMedia}\n              image={currentRecipe.image}\n              title=\"Image title\"\n            />\n            <CardContent className={classes.cardContent}>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                {currentRecipe.title}\n              </Typography>\n              <Typography>{currentRecipe.description}</Typography>\n            </CardContent>\n            <CardActions>\n              <Button size=\"small\" color=\"primary\" onClick={() => onDelete(id)}>\n                Delete\n              </Button>\n              <Button\n                size=\"small\"\n                color=\"primary\"\n                onClick={() => setModal(true)}\n              >\n                Edit\n              </Button>\n            </CardActions>\n          </Card>\n        </Container>\n      </div>\n      {!history.historyVersion ? (\n        <div>No History</div>\n      ) : (\n        <div className={classes.content}>\n          <Container maxWidth=\"sm\">\n            <h3>History</h3>\n            <Card className={classes.card}>\n              <CardMedia\n                className={classes.cardMedia}\n                image={history.historyVersion.image}\n                title=\"Image title\"\n              />\n              <CardContent className={classes.cardContent}>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  {history.historyVersion.title}\n                </Typography>\n                <Typography>{history.historyVersion.description}</Typography>\n              </CardContent>\n            </Card>\n          </Container>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst mapDispatch = {\n  getReicepeListById: actions.getReicepeListById,\n  updateRecipe: actions.updateRecipe,\n  deleteRecipe: actions.deleteRecipe,\n  updateHistoryRecipe: actions.editHistory,\n};\nconst mapState = (state) => {\n  return {\n    currentRecipe: getSingleRecipeSelector(state),\n    history: recipeHistorySelector(state),\n  };\n};\nexport default connect(mapState, mapDispatch)(SingleRecipe);\n","import React from \"react\";\nimport Recipe from \"./components/Recipe\";\nimport SingleRecipe from \"./components/SingleRecipe\";\n\nconst routes = [\n  {\n    path: \"/:id\",\n    component: <SingleRecipe />,\n    exact: true,\n  },\n  {\n    path: \"/\",\n    component: <Recipe />,\n    exact: true,\n  },\n];\n\nexport default routes;\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport * as actions from \"./redux/recipe.actions\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Route, Switch } from \"react-router-dom\";\nimport routes from \"./routes\";\n\nconst App = ({ createRecipe }) => {\n  return (\n    <div className=\"App\">\n      <Header onCreate={createRecipe} />\n      <main>\n        <Switch>\n          {routes.map((route) => (\n            <Route exact={route.exact} key={route.toString()} path={route.path}>\n              {route.component}\n            </Route>\n          ))}\n        </Switch>\n      </main>\n    </div>\n  );\n};\n\nApp.propTypes = {\n  createRecipe: PropTypes.func,\n};\nconst mapDispatch = {\n  createRecipe: actions.createRecipe,\n};\n\nexport default connect(null, mapDispatch)(App);\n","import { RECIPE_LIST_RECIEVED, SINGLE_RECIPE_RECIVED } from \"./recipe.actions\";\n\nconst initialState = {\n  recipeList: [],\n};\n\nexport const recipeReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case RECIPE_LIST_RECIEVED: {\n      return {\n        ...state,\n        recipeList: action.payload.recipeList,\n      };\n    }\n    case SINGLE_RECIPE_RECIVED: {\n      return {\n        ...state,\n        currentRecipe: action.payload.curentRecipe,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { recipeReducer } from \"./redux/recipe.reducer\";\n\nconst reducer = combineReducers({\n  recipe: recipeReducer,\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}